/** The Pong Panel
  * ICS4U1
  * @Faizaan and Vejayanath
  * @April 11, 2015
  */
package pong;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.Timer;
import java.awt.Font;






public class PongPanel extends javax.swing.JPanel {
  
  /** Creates new form PongPanel */
  private Game theGame;
  
  /** Create a new PongPanel object
    */
  public PongPanel() {
    initComponents();
    this.theGame = new Game();
    //set a timer
    Timer myTimer = new Timer(15, new ActionListener(){
      public void actionPerformed(ActionEvent evt){
        formActionPerformed(evt);
      }
      
    });
    myTimer.start();
    this.setFocusable(true);
    this.requestFocusInWindow();
  }
  @Override
  public void paint(Graphics g){
    super.paint(g);
    g.setColor(Color.black);
    g.fillRect(0,0,600,400);
    g.setColor(Color.white);
    Font a = new Font ("Arial", Font.PLAIN, 60);
    g.setFont(a);
    g.drawString(""+theGame.getAIScore(),150,60);
    g.drawString(""+theGame.getHumanScore(),400,60);
    this.theGame.paint(g);
    
  }
  /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    
    addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        formKeyPressed(evt);
      }
    });
    
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
                              layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGap(0, 400, Short.MAX_VALUE)
                             );
    layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGap(0, 300, Short.MAX_VALUE)
                           );
  }// </editor-fold>//GEN-END:initComponents
  
  //this method runs when a key is pressed
  private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_UP){
      this.theGame.change( -8);
    } else if(evt.getKeyCode() == KeyEvent.VK_DOWN){
      this.theGame.change( 8);
    }
    if (this.theGame.getAIScore() < 10 || this.theGame.getHumanScore() < 10) {
      this.repaint();
    }
  }//GEN-LAST:event_formKeyPressed
  
  //this method runs once every 30 milliseconds
  /** Create a new TicTac object
    * @param evt - allows it o run every 30 seconds
    */
  private void formActionPerformed(ActionEvent evt) {
    //makes the ball and paddles move
    theGame.update();
    
    //Checks if the padle and the ball have collided
    theGame.detectCollision();
    
    //Resets the ball to the center of the screen
    theGame.resetBall();
    
    //Checks to see if the game has not ended and if so repaints the screen
    if (this.theGame.getAIScore() < 10 || this.theGame.getHumanScore() < 10) {
      this.repaint();
    }
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
  
}